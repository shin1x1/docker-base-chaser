name: Release application
on:
  push:
    tags:
      - v*

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.23
        uses: actions/setup-go@v5
        with:
          go-version: 1.23
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Get dependencies
        run: go get -v -t -d ./...
      - name: Test code
        run: go test -v .

  create-release:
    name: Create release
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Get upload_url
        env:
          url: ${{ steps.create_release.outputs.upload_url }}
        run: |
          mkdir artifact
          echo $url > release_url.txt
      - name: Upload upload_url to artifact
        uses: actions/upload-artifact@v1
        with:
          name: release_url
          path: release_url.txt

  release:
    name: Release package
    needs: create-release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [darwin, linux, windows]
        include:
          - os: darwin
            goos: darwin
            arch: amd64
          - os: linux
            goos: linux
            arch: amd64
          - os: windows
            goos: windows
            arch: amd64
    steps:
      - name: Set up Go 1.23
        uses: actions/setup-go@v5
        with:
          go-version: 1.23
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Get dependencies
        run: go get -v -t -d ./...
      - name: Build
        env:
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.arch }}
          ref: ${{ github.ref }}
          sha: ${{ github.sha }}
        run: |
          tag=$(echo ${ref} | sed 's#refs/tags/##')
          perl -pi -e "s#%VERSION%#${tag}#g" version/version.go
          perl -pi -e "s#%COMMIT%#${sha}#g" version/version.go
          mkdir dist
          GOOS=${goos} GOARCH=${goarch} go build -v -o dist/docker-base-chaser .
          zip -j -r release dist
      - name: Download upload_url from artifact
        uses: actions/download-artifact@v4.1.7
        with:
          name: release_url
      - name: Get release_url
        id: release_url
        run: |
          value=`cat release_url/release_url.txt`
          echo ::set-output name=url::${value}
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release_url.outputs.url }}
          asset_path: release.zip
          asset_name: docker-base-chaser-${{ matrix.os }}.zip
          asset_content_type: application/zip
